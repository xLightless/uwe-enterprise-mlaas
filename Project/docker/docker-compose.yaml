services:
  django:
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ../backend:/app
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - postgres-db
    networks:
      - app_network

  postgres-db:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
      - ../backend/databases/insurance/insurance.sql:/docker-entrypoint-initdb.d/insurance.sql
      - ../backend/databases/ml/ml.sql:/docker-entrypoint-initdb.d/ml.sql
      - ../backend/databases/payments/payments.sql:/docker-entrypoint-initdb.d/payments.sql
      - ../backend/databases/traffic/traffic.sql:/docker-entrypoint-initdb.d/traffic.sql
      - ../backend/databases/users/users.sql:/docker-entrypoint-initdb.d/users.sql
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app_network

  payment-service:
    build:
      context: ../backend/services/payments
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '4000:4000'
    depends_on:
      - postgres-db
    restart: always
    networks:
      - app_network

  ml-service:
    build:
      context: ../backend/services/machinelearning
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '5000:5000'
    depends_on:
      - postgres-db
    restart: always
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
